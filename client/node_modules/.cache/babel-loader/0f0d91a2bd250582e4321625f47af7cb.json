{"ast":null,"code":"import _objectWithoutProperties from \"/Users/vincent/Desktop/projects/webdev/not deployed/andrea/e-commerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/vincent/Desktop/projects/webdev/not deployed/andrea/e-commerce/src/components/with-spinner/with-spinner.component.jsx\";\n// import React from \"react\";\n// import { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\";\n// const WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\n//   return isLoading ? (\n//     <SpinnerOverlay>\n//       <SpinnerContainer />\n//     </SpinnerOverlay>\n//   ) : (\n//     <WrappedComponent {...otherProps} />\n//   );\n// };\n// export default WithSpinner;\nimport React from \"react\";\nimport { SpinnerContainer, SpinnerOverlay } from \"./with-spinner.styles\";\n\nconst WithSpinner = WrappedComponent => {\n  const Spinner = (_ref) => {\n    let isLoading = _ref.isLoading,\n        otherProps = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n    return isLoading ? React.createElement(SpinnerOverlay, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(SpinnerContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    })) : React.createElement(WrappedComponent, Object.assign({}, otherProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  };\n\n  return Spinner;\n};\n\nexport default WithSpinner;","map":{"version":3,"sources":["/Users/vincent/Desktop/projects/webdev/not deployed/andrea/e-commerce/src/components/with-spinner/with-spinner.component.jsx"],"names":["React","SpinnerContainer","SpinnerOverlay","WithSpinner","WrappedComponent","Spinner","isLoading","otherProps"],"mappings":";;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,EAA2BC,cAA3B,QAAiD,uBAAjD;;AAEA,MAAMC,WAAW,GAAIC,gBAAD,IAAsB;AACxC,QAAMC,OAAO,GAAG,UAAkC;AAAA,QAA/BC,SAA+B,QAA/BA,SAA+B;AAAA,QAAjBC,UAAiB;;AAChD,WAAOD,SAAS,GACd,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADc,GAKd,oBAAC,gBAAD,oBAAsBC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF;AAOD,GARD;;AASA,SAAOF,OAAP;AACD,CAXD;;AAaA,eAAeF,WAAf","sourcesContent":["// import React from \"react\";\n\n// import { SpinnerOverlay, SpinnerContainer } from \"./with-spinner.styles\";\n\n// const WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\n//   return isLoading ? (\n//     <SpinnerOverlay>\n//       <SpinnerContainer />\n//     </SpinnerOverlay>\n//   ) : (\n//     <WrappedComponent {...otherProps} />\n//   );\n// };\n\n// export default WithSpinner;\nimport React from \"react\";\n\nimport { SpinnerContainer, SpinnerOverlay } from \"./with-spinner.styles\";\n\nconst WithSpinner = (WrappedComponent) => {\n  const Spinner = ({ isLoading, ...otherProps }) => {\n    return isLoading ? (\n      <SpinnerOverlay>\n        <SpinnerContainer />\n      </SpinnerOverlay>\n    ) : (\n      <WrappedComponent {...otherProps} />\n    );\n  };\n  return Spinner;\n};\n\nexport default WithSpinner;\n"]},"metadata":{},"sourceType":"module"}