{"ast":null,"code":"import { ShopActionTypes } from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});","map":{"version":3,"sources":["/Users/vincent/Desktop/projects/webdev/not deployed/andrea/e-commerce/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapShot","collectionsMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_SUCCESS","payload","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,SAASA,eAAT,QAAgC,cAAhC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;AAEAK,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACO,uBAAuB,CAACD,cAAD,CAAxB,CAAR;AACD,KALH,EAMGE,KANH,CAMUC,KAAD,IAAWT,QAAQ,CAACU,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAAxB,CAN5B;AAOD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMJ,uBAAuB,GAAID,cAAD,KAAqB;AAC1DT,EAAAA,IAAI,EAAEJ,eAAe,CAACmB,yBADoC;AAE1DC,EAAAA,OAAO,EAAEP;AAFiD,CAArB,CAAhC;AAKP,OAAO,MAAMI,uBAAuB,GAAII,YAAD,KAAmB;AACxDjB,EAAAA,IAAI,EAAEJ,eAAe,CAACsB,yBADkC;AAExDF,EAAAA,OAAO,EAAEC;AAF+C,CAAnB,CAAhC","sourcesContent":["import { ShopActionTypes } from \"./shop.types\";\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n\n    collectionRef\n      .get()\n      .then((snapShot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n      })\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};\n\nexport const fetchCollectionsSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap,\n});\n\nexport const fetchCollectionsFailure = (errorMessage) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n"]},"metadata":{},"sourceType":"module"}