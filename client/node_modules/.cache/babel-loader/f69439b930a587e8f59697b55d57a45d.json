{"ast":null,"code":"import _objectSpread from \"/Users/vincent/Desktop/projects/webdev/not deployed/andrea/e-commerce/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from \"../../firebase/firebase.utils\";\nexport function* getSnapShotFromUserAuth(userAuth, ...otherProps) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, ...otherProps);\n    const snapShot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: snapShot.id\n    }, snapShot.data())));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_ACTION, isUserAuthenticated);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    confirmPassword,\n    displayName\n  }\n}) {\n  try {\n    if (password !== confirmPassword) throw Error(\"Passwords do not match\");\n\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield put(signUpSuccess());\n    yield getSnapShotFromUserAuth(user, {\n      displayName\n    });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}","map":{"version":3,"sources":["/Users/vincent/Desktop/projects/webdev/not deployed/andrea/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","googleProvider","auth","createUserProfileDocument","getCurrentUser","getSnapShotFromUserAuth","userAuth","otherProps","userRef","snapShot","get","id","data","error","signInWithGoogle","signInWithPopup","user","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_ACTION","signOut","onSignOutStart","SIGN_OUT_START","signUp","confirmPassword","displayName","Error","createUserWithEmailAndPassword","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,EAKEC,aALF,EAMEC,aANF,QAOO,gBAPP;AASA,SACEC,cADF,EAEEC,IAFF,EAGEC,yBAHF,EAIEC,cAJF,QAKO,+BALP;AAOA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA4C,GAAGC,UAA/C,EAA2D;AAChE,MAAI;AACF,UAAMC,OAAO,GAAG,MAAMf,IAAI,CACxBU,yBADwB,EAExBG,QAFwB,EAGxB,GAAGC,UAHqB,CAA1B;AAKA,UAAME,QAAQ,GAAG,MAAMD,OAAO,CAACE,GAAR,EAAvB;AACA,UAAMnB,GAAG,CAACI,aAAa;AAAGgB,MAAAA,EAAE,EAAEF,QAAQ,CAACE;AAAhB,OAAuBF,QAAQ,CAACG,IAAT,EAAvB,EAAd,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AAAA,iBACe,MAAMZ,IAAI,CAACa,eAAL,CAAqBd,cAArB,CADrB;AAAA,UACMe,IADN,QACMA,IADN;;AAEF,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUI,mBAAV,GAAgC;AACrC,QAAM3B,UAAU,CAACI,eAAe,CAACwB,oBAAjB,EAAuCJ,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUK,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA4D;AACjE,MAAI;AAAA,kBACe,MAAMpB,IAAI,CAACqB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADrB;AAAA,UACMN,IADN,SACMA,IADN;;AAEF,UAAMX,uBAAuB,CAACW,IAAD,CAA7B;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUW,kBAAV,GAA+B;AACpC,QAAMlC,UAAU,CAACI,eAAe,CAAC+B,mBAAjB,EAAsCN,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMpB,QAAQ,GAAG,MAAMF,cAAc,EAArC;AACA,QAAI,CAACE,QAAL,EAAe;AACf,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACK,aAAa,CAACiB,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUc,kBAAV,GAA+B;AACpC,QAAMrC,UAAU,CAACI,eAAe,CAACkC,iBAAjB,EAAoCF,mBAApC,CAAhB;AACD;AAED,OAAO,UAAUG,OAAV,GAAoB;AACzB,MAAI;AACF,UAAM3B,IAAI,CAAC2B,OAAL,EAAN;AACA,UAAMtC,GAAG,CAACM,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOgB,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACO,cAAc,CAACe,KAAD,CAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUiB,cAAV,GAA2B;AAChC,QAAMxC,UAAU,CAACI,eAAe,CAACqC,cAAjB,EAAiCF,OAAjC,CAAhB;AACD;AAED,OAAO,UAAUG,MAAV,CAAiB;AACtBZ,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBW,IAAAA,eAAnB;AAAoCC,IAAAA;AAApC;AADa,CAAjB,EAEJ;AACD,MAAI;AACF,QAAIZ,QAAQ,KAAKW,eAAjB,EAAkC,MAAME,KAAK,CAAC,wBAAD,CAAX;;AADhC,kBAEe,MAAMjC,IAAI,CAACkC,8BAAL,CAAoCf,KAApC,EAA2CC,QAA3C,CAFrB;AAAA,UAEMN,IAFN,SAEMA,IAFN;;AAGF,UAAMzB,GAAG,CAACQ,aAAa,EAAd,CAAT;AACA,UAAMM,uBAAuB,CAACW,IAAD,EAAO;AAAEkB,MAAAA;AAAF,KAAP,CAA7B;AACD,GALD,CAKE,OAAOrB,KAAP,EAAc;AACd,UAAMtB,GAAG,CAACS,aAAa,CAACa,KAAD,CAAd,CAAT;AACD;AACF;AAED,OAAO,UAAUwB,aAAV,GAA0B;AAC/B,QAAM/C,UAAU,CAACI,eAAe,CAAC4C,aAAjB,EAAgCN,MAAhC,CAAhB;AACD;AAED,OAAO,UAAUO,SAAV,GAAsB;AAC3B,QAAM/C,GAAG,CAAC,CACRC,IAAI,CAACwB,mBAAD,CADI,EAERxB,IAAI,CAAC+B,kBAAD,CAFI,EAGR/B,IAAI,CAACkC,kBAAD,CAHI,EAIRlC,IAAI,CAACqC,cAAD,CAJI,EAKRrC,IAAI,CAAC4C,aAAD,CALI,CAAD,CAAT;AAOD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  SignInSuccess,\n  SignInFailure,\n  signOutSuccess,\n  signOutFailure,\n  signUpSuccess,\n  signUpFailure,\n} from \"./user.actions\";\n\nimport {\n  googleProvider,\n  auth,\n  createUserProfileDocument,\n  getCurrentUser,\n} from \"../../firebase/firebase.utils\";\n\nexport function* getSnapShotFromUserAuth(userAuth, ...otherProps) {\n  try {\n    const userRef = yield call(\n      createUserProfileDocument,\n      userAuth,\n      ...otherProps\n    );\n    const snapShot = yield userRef.get();\n    yield put(SignInSuccess({ id: snapShot.id, ...snapShot.data() }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* signInWithEmail({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapShotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapShotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\n\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_ACTION, isUserAuthenticated);\n}\n\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\n\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* signUp({\n  payload: { email, password, confirmPassword, displayName },\n}) {\n  try {\n    if (password !== confirmPassword) throw Error(\"Passwords do not match\");\n    const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess());\n    yield getSnapShotFromUserAuth(user, { displayName });\n  } catch (error) {\n    yield put(signUpFailure(error));\n  }\n}\n\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* userSagas() {\n  yield all([\n    call(onGoogleSignInStart),\n    call(onEmailSignInStart),\n    call(onCheckUserSession),\n    call(onSignOutStart),\n    call(onSignUpStart),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}